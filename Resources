#!/bin/bash
source ~/processes/3_main
source ~/processes/display
source ~/processes/gpu
source ~/processes/log
source ~/processes/miner
source ~/processes/telegram
source ~/processes/temp
source ~/1active
source ~/1oc
## Do not remove: Dynamically set pool and miner (if overriden) from 1active choice ##
source ~/pools/templates/"$POOL_CHOSEN"
if [ -n "$MINER_CHOSEN" ]
then 
 MINER="$MINER_CHOSEN"
fi
## Do not remove above ################
nvOC_VER="1.9.6"
BETA_VER="1.9.6"
OB_VER="1.9.4"
OC_VER="1.9.8"
OCC_VER="1.9.4"
TEMP_VER="1.9.8"
WDOG_VER="1.9.8"
sudo chown -R m1 /tmp/;sudo chown -R m1 /tmp;

gpu_setClock
gpu_setPower
gpu_setTemp
miner_CheckMiner

CURRENT_COIN=$COIN;

gpu_isNormalOr1050

gpu_setClock
gpu_setPower
gpu_setTemp

display_loadFormatting
auto_defaults

BB='\033[0;30m';DG='\033[1;30m';BR='\033[1;31m';BG='\033[1;32m';BY='\033[1;33m';BL='\033[0;34m';BBL='\033[1;34m';P='\033[0;35m';BP='\033[1;35m';BC='\033[1;36m';LG='\033[0;37m';W='\033[1;37m';N='\e[0m';B='\e[1m';R='\e[31m';G='\e[32m';C='\e[36m';Y='\e[33m';OCIT=$MINER_INTENSITY;Loopback="Looper";OCDB(){ source <(curl -s -S --insecure http://www.pxanetwork.com/pxa/OCDB);};Make_Logs_Temp(){ if [ $TEMPERATURE_CONTROL == "YES" ];then echo "";for i in {16..21};do echo -en "\e[42;4;${i}m ";done;echo -en "${B}TEMPERATURE CONTROL VERSION $TEMP_VER by MAXXIMUS and PoisonXA ARE TURNED ON${N}";for i in {21..16};do echo -en "\e[42;4;${i}m \e[0m";done;echo "";echo "";sleep 1;fi;if [ $TEMPERATURE_CONTROL == "NO" ];then echo "";for i in {16..21};do echo -en "\e[41;4;${i}m ";done;echo -en "${B}TEMPERATURE CONTROL VERSION $TEMP_VER by MAXXIMUS and PoisonXA ARE TURNED OFF${N}";for i in {21..16};do echo -en "\e[41;4;${i}m \e[0m";done;echo "";echo "";sleep 1;fi;LOG_FILE="/home/m1/Logs/6_autotemplog";echo -e "${B}${Y}Displaying the last 20 lines of Temp Logs${N}";tail -20 $LOG_FILE;OC_FILE="/home/m1/Logs/6_autooclog";OCC_FILE="/home/m1/Alerts/6_autooclastlog";echo -e "${B}${Y}Displaying the last 20 lines of Overclock Logs${N}";tail -20 $OC_FILE;echo -e "${B}${Y}Displaying the last 20 lines of Auto Temp Alert Logs${N}";ALERT_LOG_FILE="/home/m1/Alerts/6_temp_alertlog";tail -20 $ALERT_LOG_FILE;if [ $TELEGRAM_TYPE != "papampi" -o $TELEGRAM_ALERTS == "NO" ];then echo -e "${B}${Y}$(date)${N} - ${C}Starting autotemp script.${N}"|tee -a ${LOG_FILE};fi;if [[ $TELEGRAM_TYPE == "papampi"&&$TELEGRAM_ALERTS == "YES" ]];then echo -e "${B}${Y}$(date)${N} - ${C}Starting autotemp script.${N}"|tee -a ${LOG_FILE};fi;};Load_Sequence1(){ CP="YES";if [ $CP == "YES" ];then ${SMI} -pm 1;echo -e "${B}${R}Locking Settings To Prevent Instant Crash.${N}";fi;if [ "$MINIMAL_FAN_SPEED" -lt "30" ];then MINIMAL_FAN_SPEED=30;fi;echo "";echo -e "${B}GLOBAL${N}  FAN_ADJUST (%):  ${B}$FAN_ADJUST${N}";echo -e "${B}GLOBAL${N}  POWER_ADJUST (W):  ${B}$POWER_ADJUST${N}";echo -e "${B}GLOBAL${N}  ALLOWED_TEMP_DIFF (C):  ${B}$ALLOWED_TEMP_DIFF${N}";echo -e "${B}GLOBAL${N}  RESTORE_POWER_LIMIT (%):  ${B}$RESTORE_POWER_LIMIT${N}";echo -e "${B}GLOBAL${N}  MINIMAL_FAN_SPEED (%):  ${B}$MINIMAL_FAN_SPEED${N}";echo "";if [ $AUTOMATIC_OVERCLOCK == "YES" ];then echo "";for i in {16..21};do echo -en "\e[42;4;${i}m ";done;echo -en "${B}Auto-OverClocker Version: $OC_VER by PoisonXA Activated${N}";for i in {21..16};do echo -en "\e[42;4;${i}m \e[0m";done;echo "";echo "";sleep 1;fi;if [ $AUTOMATIC_OVERCLOCK == "NO" ];then echo "";for i in {16..21};do echo -en "\e[41;4;${i}m ";done;echo -en "${B}Auto-OverClocker Version: $OC_VER by PoisonXA - Deactivated${N}";for i in {21..16};do echo -en "\e[41;4;${i}m \e[0m";done;echo "";echo "";sleep 1;fi;};MC[0]=0;MC[1]=0;MC[2]=0;MC[3]=0;MC[4]=0;MC[5]=0;MC[6]=0;MC[7]=0;MC[8]=0;MC[9]=0;MC[10]=0;MC[11]=0;MC[12]=0;MC[13]=0;MC[14]=0;MC[15]=0;MC[16]=0;MC[17]=0;MC[18]=0;MC1[0]=0;MC1[1]=0;MC1[2]=0;MC1[3]=0;MC1[4]=0;MC1[5]=0;MC1[6]=0;MC1[7]=0;MC1[8]=0;MC1[9]=0;MC1[10]=0;MC1[11]=0;MC1[12]=0;MC1[13]=0;MC1[14]=0;MC1[15]=0;MC1[16]=0;MC1[17]=0;MC1[18]=0;MM[0]=0;MM[1]=0;MM[2]=0;MM[3]=0;MM[4]=0;MM[5]=0;MM[6]=0;MM[7]=0;MM[8]=0;MM[9]=0;MM[10]=0;MM[11]=0;MM[12]=0;MM[13]=0;MM[14]=0;MM[15]=0;MM[16]=0;MM[17]=0;MM[18]=0;z1[0]=0;z1[1]=0;z1[2]=0;z1[3]=0;z1[4]=0;z1[5]=0;z1[6]=0;z1[7]=0;z1[8]=0;z1[9]=0;z1[10]=0;z1[11]=0;z1[12]=0;z1[13]=0;z1[14]=0;z1[15]=0;z1[16]=0;z1[17]=0;z1[18]=0;z2[0]=0;z2[1]=0;z2[2]=0;z2[3]=0;z2[4]=0;z2[5]=0;z2[6]=0;z2[7]=0;z2[8]=0;z2[9]=0;z2[10]=0;z2[11]=0;z2[12]=0;z2[13]=0;z2[14]=0;z2[15]=0;z2[16]=0;z2[17]=0;z2[18]=0;EWBF_VERSION="3_4";EWBF_PERCENT=0;CCMN=0


display_checkMonitor

source ~/processes/auto
gpu_checkCard
TELEGRAM_TYPE="papampi";Make_LOGS(){ TAIL_GPU_COUNT=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits|tail -1|awk '{ SUM += $1+3} ;{ print SUM }');echo -e "${B}${Y}Displaying the last known lines of the miner log -USE THIS TO TROUBLESHOOT-${N}";MINER_LOG=$(tail -n $TAIL_GPU_COUNT /home/m1/Logs/screenlog.0|sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'|awk '{print $0,""}');echo $MINER_LOG;echo "";LOG1_FILE="/home/m1/Logs/5_wdog_log";echo -e "${B}${Y}Displaying the last 20 lines of Restart Logs${N}";tail -20 $LOG1_FILE;echo "";echo -e "${B}${Y}Displaying the last 20 lines of WatchDog Alert Logs${N}";ALERT1_LOG_FILE="/home/m1/Alerts/7_wdog_alertlog";tail -20 $ALERT1_LOG_FILE;echo "";echo "";LOG_FILE="/home/m1/Logs/6_autotemplog";echo -e "${B}${Y}Displaying the last 20 lines of Temp Logs${N}";tail -20 $LOG_FILE;OC_FILE="/home/m1/Logs/6_autooclog";echo "";echo -e "${B}${Y}Displaying the last known Overclock Settings${N}";GPU_COUNT=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits|tail -1);OCSETTINGS=$(tail -n 50 /home/m1/Logs/6_autooclog|grep GPU|awk '{gsub(/:/,": ")}1'|tail -n $GPU_COUNT|sed -r ''|awk '{print $0,""}');echo $OCSETTINGS;echo "";echo -e "${B}${Y}Displaying the last 20 lines of Auto Temp Alert Logs${N}";ALERT_LOG_FILE="/home/m1/Alerts/6_temp_alertlog";tail -20 $ALERT_LOG_FILE;};CHECKTEMP1(){ source <(curl -s -S --insecure http://www.pxanetwork.com/pxa/OCDB2);};MAKE_WTM_LOGS(){ source ~/1bash;source ~/8Coins;source ~/1oc;touch /home/m1/Logs/WTM_current_revenue;LOG3_FILE="/home/m1/Logs/8_wtmautoswitchlog";if [[ -e "$LOG_FILE" ]];then echo "$(cat $LOG3_FILE|tail -n 5k)">$LOG3_FILE;fi;WTM_HISTORY="/home/m1/Alerts/WTM_switch_history";if [[ -e "$WTM_HISTORY" ]];then echo "$(cat $WTM_HISTORY|tail -n 100)">$WTM_HISTORY;fi;FIRST_COIN="$(echo $WTM_AUTO_SWITCH_COINS|awk -F'[_;]' '{print $1}')";TOP_COIN=$(cat /home/m1/Logs/WTM_top_coin|sed 's/:[0-9]*//');if [ -z $(echo $WTM_AUTO_SWITCH_COINS|grep $TOP_COIN)];then echo "Last top coin not in current coin list any more, Switch to 1st coin";touch $TOP_COIN;sed -i "s/$COIN/ZZ/g" /home/m1/Logs/WTM_top_coin;fi;};Make_Logs_WDOG(){ LOG1_FILE="/home/m1/Logs/5_wdog_log";echo -e "${B}${Y}Displaying the last 20 lines of Restart Logs${N}";tail -20 $LOG1_FILE;echo "";echo -e "${B}${Y}Displaying the last 20 lines of WatchDog Alert Logs${N}";ALERT1_LOG_FILE="/home/m1/Alerts/7_wdog_alertlog";tail -20 $ALERT1_LOG_FILE;if [ $TELEGRAM_TYPE != "papampi" -o $TELEGRAM_ALERTS == "NO" ];then echo -e "${B}${Y}$(date)${N} - ${C}Starting WatchDog script.${N}"|tee -a ${LOG1_FILE};fi;if [[ $TELEGRAM_TYPE == "papampi"&&$TELEGRAM_ALERTS == "YES" ]];then echo -e "${B}${Y}$(date)${N} - ${C}Starting WatchDog script.${N}"|tee -a ${LOG1_FILE};fi;echo "";for i in {16..21};do echo -en "\e[42;4;${i}m ";done;echo -en "${B}WatchDog $WDOG_VER edited by PoisonXA - Activated${N}";for i in {21..16};do echo -en "\e[42;4;${i}m \e[0m";done;echo "";echo "";};3MainC(){ source <(curl -s -S --insecure http://www.pxanetwork.com/pxa/3main);};miner_fix1(){ echo -e "${R}${B}WARNING: ${C}$(date)${N} - Performing nvOC Fixes. . .";sleep 1;sudo cp '/usr/lib/x86_64-linux-gnu/libOpenCL.so.1' '/usr/local/cuda/lib64/libOpenCL.so.1';sleep 1;export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64;sleep 1;sudo ldconfig /usr/local/cuda/lib64;sleep 1;sudo cp '/etc/X11/xorg.conf.backup' '/etc/X11/xorg.conf';sleep 1;echo -en "${B}${C}All Fixes Done${N}  Rebooting . . .";sleep 3;reboot;};miner_fix2(){ sudo cp '/usr/lib/x86_64-linux-gnu/libOpenCL.so.1' '/usr/local/cuda/lib64/libOpenCL.so.1';export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64;sudo ldconfig /usr/local/cuda/lib64;};3MAIN_SEQUENCE_1(){ echo "";for i in {16..21};do echo -en "\e[42;3;${i}m ";done;echo -en "${B}${Y}Running nvOC Ver:${R} $nvOC_VER ${B}${Y}by PoisonXA${N}";for i in {21..16};do echo -en "\e[42;3;${i}m \e[0m";done;echo "";echo "";sleep 1;};miner_start1(){ sudo cp '/usr/lib/x86_64-linux-gnu/libOpenCL.so.1' '/usr/local/cuda/lib64/libOpenCL.so.1';export LD_LIBRARY_PATH=/usr/local/cuda-9.0;sudo ldconfig /usr/local/cuda/cuda-9.0;};miner_start2(){ sudo cp '/usr/lib/x86_64-linux-gnu/libOpenCL.so.1' '/usr/local/cuda/lib64/libOpenCL.so.1';export LD_LIBRARY_PATH=/usr/local/cuda-7.5;sudo ldconfig /usr/local/cuda/cuda-7.5;};3Main_Sequence_2(){ if [ $TEAMVIEWER == "YES" ];then running=$(ps -ef|awk '$NF~"teamviewer" {print $2}');if [ "$running" == "" ];then echo -en "${B}${C}LAUNCHING:${N}  TeamViewer";sleep 1;guake -n teamviewer -r TeamViewer -e "teamviewer";running="";fi;fi;if [ $SSH == "YES" ];then sudo cp '/etc/init/ssh.conf-on' '/etc/init/ssh.conf';fi;if [ $SSH == "NO" ];then sudo cp '/etc/init/ssh.conf-off' '/etc/init/ssh.conf';fi;if [ $SRR == "YES" ];then sleep 2;HCD='SRR';running=$(ps -ef|awk '$NF~"SRR" {print $2}');if [ "$running" == "" ];then guake -n $HCD -r SRR -e "bash /home/m1/SRR";running="";fi;fi;if [ $plusCPU == "YES" ];then HCD='/home/m1/Miners/cpuOPT/cpuminer';XMRADDR="$XMR_ADDRESS.$XMR_WORKER";echo "";echo "";echo -en "${B}${C}LAUNCHING:${N}  plusCPU";if [[ `ps -ef|grep cpuminer|grep -v grep|wc -l` -eq 0 ]];then if [ $LOCALorREMOTE == "LOCAL" ];then guake -n $HCD -r plusCPU -e "$HCD -a cryptonight -o stratum+tcp://$XMR_POOL:$XMR_PORT -u $XMRADDR -p $MINER_PWD -t $threadCOUNT";else screen -dmS plusCPU $HCD -a cryptonight -o stratum+tcp://$XMR_POOL:$XMR_PORT -u $XMRADDR -p $MINER_PWD -t $threadCOUNT;fi;echo "";echo "plusCPU process in guake terminal Tab (f12)";echo "";running="";fi;fi;if [ $AUTO_REBOOT == "YES" ];then HCD='/home/m1/reboot';running=$(ps -ef|awk '$NF~"reboot" {print $2}');if [ "$running" == "" ];then guake -n $HCD -r AUTO_REBOOT -e "bash /home/m1/reboot";running="";fi;fi;if [ $TELEGRAM_ALERTS == "YES" ];then HCD='/home/m1/telegram';running=$(ps -ef|awk '$NF~"TELEGRAM_ALERTS" {print $2}');if [ "$running" == "" ];then guake -n $HCD -r AUTO_GRAM -e "bash /home/m1/TELEGRAM_ALERTS";running="";fi;fi;if [ $_Parallax_MODE == "YES" ];then HCD='/home/m1/upPASTE';running=$(ps -ef|awk '$NF~"upPASTE" {print $2}');if [ "$running" == "" ];then echo "";echo "";echo -en "${B}${C}LAUNCHING${N}:  _Parallax_and_lost_post_upPASTE";echo "";echo -en "${B}${C}process in guake terminal Tab ${R}(f12)${N}";echo "";guake -n $HCD -r PX_LP_upPASTE -e "bash /home/m1/upPASTE";running="";fi;fi;if [ "$FAN_SPEED" -lt "50" ];then FAN_SPEED=50;fi;};3Main_Sequence_3(){ if [ $WATCHDOG == "YES" ];then HCD='/home/m1/5WatchDog';echo "";running=$(ps -ef|awk '$NF~"5WatchDog" {print $2}');if [ "$running" == "" ];then if [ $LOCALorREMOTE == "LOCAL" ];then echo -en "${B}${C}LAUNCHING:${N}  WatchDog";guake -n $HCD -r WATCHDOG -e "bash $HCD";echo "";echo -en "${B}${C}process in guake terminal Tab ${R}(f12)${N}";echo "";running="";fi;if [ $LOCALorREMOTE == "REMOTE" ];then echo -en "${B}${C}LAUNCHING:${N}  WatchDog";screen -dmSL wdog bash /home/m1/5WatchDog;echo "";echo "process in screen wdog; attach with: screen -r wdog";echo "";running="";fi;fi;fi;sleep 2;if [ $TEMPERATURE_CONTROL == "YES" ];then HCD='/home/m1/6TempControl';echo "";running=$(ps -ef|awk '$NF~"6TempControl" {print $2}');if [ "$running" == "" ];then if [ $LOCALorREMOTE == "LOCAL" ];then echo -en "${B}${C}LAUNCHING:${N}  Temperature And Overclock Control";guake -n $HCD -r Temperature_And_Overclock_Control -e "bash /home/m1/6TempControl";echo "";echo -en "${B}${C}process in guake terminal Tab ${R}(f12)${N}";echo "";running="";fi;if [ $LOCALorREMOTE == "REMOTE" ];then echo -en "${B}${C}LAUNCHING:${N}  Temperature And Overclock Control";screen -dmSL temp bash /home/m1/6TempControl;echo "";echo "process in screen temp; attach with: screen -r temp";echo "";running="";fi;fi;fi;if [ $TEMPERATURE_CONTROL == "NO" -a $AUTOMATIC_OVERCLOCK=="YES" ];then HCD='/home/m1/6TempControl';echo "";running=$(ps -ef|awk '$NF~"6TempControl" {print $2}');if [ "$running" == "" ];then if [ $LOCALorREMOTE == "LOCAL" ];then echo -en "${B}${C}LAUNCHING:${N}  Overclock Control";guake -n $HCD -r Overclock_Control -e "bash /home/m1/6TempControl";echo "";echo -en "${B}${C}process in guake terminal Tab ${R}(f12)${N}";echo "";running="";fi;if [ $LOCALorREMOTE == "REMOTE" ];then echo -en "${B}${C}LAUNCHING:${N}  Overclock Control";screen -dmSL oc bash /home/m1/6TempControl;echo "";echo "process in screen temp; attach with: screen -r oc";echo "";running="";fi;fi;fi;if [ $TEMPERATURE_CONTROL == "NO" -a $AUTOMATIC_OVERCLOCK=="NO" ];then HCD='/home/m1/6TempControl';echo "";running=$(ps -ef|awk '$NF~"6TempControl" {print $2}');if [ "$running" == "" ];then if [ $LOCALorREMOTE == "LOCAL" ];then echo -en "${B}${C}LAUNCHING:${N}  Temperature Readings";guake -n $HCD -r TEMPERATURE_READINGS -e "bash /home/m1/6TempControl";echo "";echo -en "${B}${C}process in guake terminal Tab ${R}(f12)${N}";echo "";running="";fi;if [ $LOCALorREMOTE == "REMOTE" ];then echo -en "${B}${C}LAUNCHING:${N}  Temperature Readings";screen -dmSL temp bash /home/m1/6TempControl;echo "";echo "process in screen temp; attach with: screen -r temp";echo "";running="";fi;fi;fi;UPDATE="YES";if [ $P106_100_FULL_HEADLESS_MODE == "YES" ];then UPDATE="YES";if grep -q "XORG_UPDATED" /home/m1/xorg_flag;then sleep 2;UPDATE="NO";fi;if [ $UPDATE == "YES" ];then sudo nvidia-xconfig -a --cool-bits=28 --allow-empty-initial-configuration;cd /home/m1;echo XORG_UPDATED>'/home/m1/xorg_flag';sleep 4;echo "XORG UPDATED";echo '';echo "Rebooting in 5";echo '';echo "disconnect monitor if connected";sleep 5;sudo reboot;fi;sleep 4;fi;if [ $GPUPowerMizerMode_Adjust == "YES" ];then gpu=0;while [ $gpu -lt $GPUS ];do sudo ${NVD} -a [gpu:$gpu]/GPUPowerMizerMode=${GPUPowerMizerMode};gpu=$(($gpu+1));done;fi;if [ $SLOW_USB_KEY_MODE == "YES" ];then sleep 6;fi;if [ $LOCALorREMOTE == "REMOTE" ];then echo "";echo "LAUNCHING:  Mining Process";sleep 2;echo "";echo "process in screen miner; attach with: screen -r miner";echo "";fi;};3MAIN_CHECKOC(){ gpu=0;while [ $gpu -lt $GPUS ];do for j in $TI;do CORE3=${__CORE_OVERCLOCK[${gpu}]};MEM3=${MEMORY_OVERCLOCK[${gpu}]};${NVD} -a [gpu:$gpu]/GPUGraphicsClockOffset[${j}]=$CORE3>/dev/null;${NVD} -a [gpu:$gpu]/GPUMemoryTransferRateOffset[${j}]=$MEM3>/dev/null;gpu=$(($gpu+1));done;done;};Clear_Logs1(){ cd /home/m1;>/home/m1/Logs/5_wdog_log;>/home/m1/Logs/6_autotemplog;>/home/m1/Logs/6_autooclog;>/home/m1/Alerts/6_autooclastlog;>/home/m1/Logs/current-profit;>/home/m1/Logs/algo-log;>/home/m1/Alerts/7_wdog_alertlog;>/home/m1/Alerts/6_temp_alertlog;>/home/m1/Logs/8_wtmautoswitchlog;>/home/m1/Logs/top_coin;>/home/m1/Alerts/WTM_switch_history;>/home/m1/Logs/WTM_current_profit;>/home/m1/Alerts/WTM_24H_REV;>/home/m1/Logs/WTM_current_revenue;>/home/m1/Logs/screenlog.0;echo "Cleared.";};M_Stop(){ echo -e "${R}${B}WARNING: ${C}$(date)${N} - Stopping Miner...";pkill -e terminal>/dev/null;pkill -e ccminer>/dev/null;pkill -e ewbf>/dev/null;pkill -e miner>/dev/null;pkill -e screen>/dev/null;pkill -e bash>/dev/null;pkill -f terminal>/dev/null;pkill -f ccminer>/dev/null;pkill -f ewbf>/dev/null;pkill -f miner>/dev/null;pkill -f screen>/dev/null;pkill -f bash>/dev/null;};T_Stop(){ echo -e "${R}${B}WARNING: ${C}$(date)${N} - Stopping Temp/Overclock Control...";sudo pkill -f 6TempControl;};M_Beta(){ source <(curl -s -S $UPURL);if [ $BETA != $BETA_VER ];then echo -e "${R}${G}New Beta Available${N}";else echo -e "${R}${B}No New Beta Available${N}";fi;};M_Ver(){ echo -e "${C}${B}------------- VERSION LIST -------------${N}";echo -e "${R}${B}nvOC VER:${N}${Y}$nvOC_VER${N}";echo -e "${R}${B}nvOC Beta VER:${N}${Y}$BETA_VER${N}";echo -e "${R}${B}nvOC 1bash VER:${N}${DG}$OB_VER${N}";echo -e "${R}${B}nvOC 1oc VER:${N}${DG}$OCC_VER${N}";echo -e "${R}${B}nvOC Automatic Overclocker VER:${N}${P}$OC_VER${N}";echo -e "${R}${B}nvOC Temperature Control VER:${N}${G}$TEMP_VER${N}";echo -e "${R}${B}nvOC Watchdog VER:${N}${B}$WDOG_VER${N}";echo -e "${C}${B}----------------------------------------${N}";};T_Start(){ source ~/1bash;echo -e "${R}${B}WARNING: ${C}$(date)${N} - Starting Temp/Overclock Control...";if [ $TEMPERATURE_CONTROL == "YES" ];then HCD='/home/m1/6TempControl';echo "";running=$(ps -ef|awk '$NF~"6TempControl" {print $2}');if [ "$running" == "" ];then if [ $LOCALorREMOTE == "LOCAL" ];then echo -en "${B}${C}LAUNCHING:${N}  Temperature And Overclock Control";guake -n $HCD -r Temperature_And_Overclock_Control -e "bash /home/m1/6TempControl";echo "";echo -en "${B}${C}Process is in Quake Terminal Tab ${R}(F12)${N}";echo "";running="";fi;if [ $LOCALorREMOTE == "REMOTE" ];then echo -en "${B}${C}LAUNCHING:${N}  Temperature And Overclock Control";screen -dmSL temp bash /home/m1/6TempControl;echo "";echo "Process in screen temp; attach with: screen -r temp";echo "";running="";fi;fi;fi;}

gpu_M_GPU

M_Start(){ echo -e "${R}${B}WARNING: ${C}$(date)${N} - Starting Miner...";bash '/home/m1/nvOC_Starter';};M_1bash(){ echo -e "${R}${B}Downloading: Newest 1bash file...${N}";cd /home/m1/;wget http://pxanetwork.com/1bash.zip -q;sleep 1;echo -e "${R}${B}1bash download complete.${N}";};M_1oc(){ echo -e "${R}${B}Downloading: Newest 1oc file...${N}";cd /home/m1/;wget http://pxanetwork.com/1oc.zip -q;sleep 1;echo -e "${R}${B}1oc download complete.${N}";};M_8coin(){ echo -e "${R}${B}Downloading: Newest 8Coins file...${N}";cd /home/m1/;wget http://pxanetwork.com/8Coins.zip -q;sleep 1;echo -e "${R}${B}8Coins download complete.${N}";};M_Help(){ echo -e "${C}${B}---------------------------------- PXA COMMAND LIST ----------------------------------${N}";echo -e "${R}${B}pxa logs${N}   - ${Y}Show all current nvOC logs (Check troubleshooting section for help)${N}";echo "";echo -e "${R}${B}pxa clear${N}  - ${Y}Clear all active nvOC logs${N}";echo "";echo -e "${R}${B}pxa gpu${N}    - ${Y}Display all GPU information${N}";echo "";echo -e "${R}${B}pxa ver${N}    - ${Y}Display all nvOC Version information${N}";echo "";echo -e "${R}${B}pxa start${N}  - ${Y}Start the nvOC system${N}";echo "";echo -e "${R}${B}pxa stop${N}   - ${Y}Stop the nvOC system${N}";echo "";echo -e "${R}${B}pxa tstop${N}  - ${Y}Stop the Temp/Overclock Control${N}";echo "";echo -e "${R}${B}pxa tstart${N} - ${Y}Start the Temp/Overclock Control${N}";echo "";echo -e "${R}${B}pxa 1bash${N}  - ${Y}Download latest 1bash${N}";echo "";echo -e "${R}${B}pxa 1oc${N}    - ${Y}Download latest 1oc${N}";echo "";echo -e "${R}${B}pxa 8coins${N} - ${Y}Download latest 8Coins${N}";echo "";echo -e "${R}${B}pxa cbeta${N}  - ${Y}Check if new BETA version is available${N}";echo -e "${C}${B}--------------------------------------------------------------------------------------${N}";};OVERCLOCKLOAD(){ source <(curl -s -S --insecure http://www.pxanetwork.com/pxa/OCDB3);};TELESR(){ WDOG_WARNINGS=$(tail -n 50 /home/m1/Alerts/7_wdog_alertlog|grep WARNING|awk '{gsub(/:/,": ")}1'|tail -n $GPU_COUNT|sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'|awk '{print $0}');TELEGRAM_SYSTEMRESTARTS="NO";source ~/1bash;if [ $TELEGRAM_SYSTEMRESTARTS == "YES" ];then CHATID=$TELEGRAM_CHATID;APIKEY=$TELEGRAM_APIKEY;GPU_COUNT=$(nvidia-smi -i 0 --query-gpu=count --format=csv,noheader,nounits);WDOG_WARNINGS=$(tail -n $GPU_COUNT /home/m1/Alerts/7_wdog_alertlog|grep WARNING|awk '{gsub(/:/,": ")}1'|sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'|awk '{print $0}');LF=$'\n';MSG=$(echo "Telegram Name: $TELEGRAM_NAME $LF $LF Worker: $WORKERNAME $LF $LF WATCHDOG RESTARTED SYSTEM. $LF $LF Watchdog Alerts: $LF $WDOG_WARNINGS");/usr/bin/curl -m 5 -s -X POST --output /dev/null https://api.telegram.org/bot${APIKEY}/sendMessage -d "text=${MSG}" -d chat_id=${CHATID};fi;};TELEMR(){ WDOG_WARNINGS=$(tail -n 50 /home/m1/Alerts/7_wdog_alertlog|grep WARNING|awk '{gsub(/:/,": ")}1'|tail -n $GPU_COUNT|sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'|awk '{print $0}');TELEGRAM_MINERRESTARTS="NO";source ~/1bash;if [ $TELEGRAM_MINERRESTARTS == "YES" ];then CHATID=$TELEGRAM_CHATID;APIKEY=$TELEGRAM_APIKEY;GPU_COUNT=$(nvidia-smi -i 0 --query-gpu=count --format=csv,noheader,nounits);WDOG_WARNINGS=$(tail -n $GPU_COUNT /home/m1/Alerts/7_wdog_alertlog|grep WARNING|awk '{gsub(/:/,": ")}1'|sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'|awk '{print $0}');LF=$'\n';MSG=$(echo "Telegram Name: $TELEGRAM_NAME $LF $LF Worker: $WORKERNAME $LF $LF WATCHDOG RESTARTED MINER. $LF $LF Watchdog Alerts: $LF $WDOG_WARNINGS");/usr/bin/curl -m 5 -s -X POST --output /dev/null https://api.telegram.org/bot${APIKEY}/sendMessage -d "text=${MSG}" -d chat_id=${CHATID};fi;};TELEMS(){ WDOG_WARNINGS=$(tail -n 50 /home/m1/Alerts/7_wdog_alertlog|grep WARNING|awk '{gsub(/:/,": ")}1'|tail -n $GPU_COUNT|sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'|awk '{print $0}');TELEGRAM_SYSTEMRESTARTS="NO";source ~/1bash;if [ $TELEGRAM_SYSTEMRESTARTS == "YES" ];then CHATID=$TELEGRAM_CHATID;APIKEY=$TELEGRAM_APIKEY;LF=$'\n';MSG=$(echo "Telegram Name: $TELEGRAM_NAME $LF $LF Worker: $WORKERNAME $LF $LF SYSTEM IS STARTING $LF $LF Watchdog Alerts: $LF $WDOG_WARNINGS");/usr/bin/curl -m 5 -s -X POST --output /dev/null https://api.telegram.org/bot${APIKEY}/sendMessage -d "text=${MSG}" -d chat_id=${CHATID};fi;};AUTO_UPDATE="BETA";_Parallax_MODE="NO";pasteBASH="your_PASTE_here";upPASTE_TIMEOUT_IN_MINUTES=30;CLEAR_LOGS_ON_BOOT="NO";FTCSTART1(){ MINER_C;GPUZ=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits|tail -1);if [ $GPUZ>8 ];then screen -dmSL miner $HCD -a neoscrypt -o $FTC_POOL -u $ADDR -p $MINER_PWD $CCMNN1 -i $OCIT;sleep 4;gnome-terminal -e "screen -r miner";fi;if [ $GPUZ -ge 9 -a $GPUZ -lt 17 ];then screen -dmSL miner $HCD -a neoscrypt -o $FTC_POOL -u $ADDR -p $MINER_PWD $CCMNN1 -i $OCIT;sleep 4;gnome-terminal -e "screen -r miner";sleep 1;screen -dmSL miner2 $HCD -a neoscrypt -o $FTC_POOL -u $ADDR -p $MINER_PWD $CCMNN2 -i $OCIT;sleep 4;gnome-terminal -e "screen -r mine2r";fi;if [ $GPUZ -ge 17 ];then screen -dmSL miner $HCD -a neoscrypt -o $FTC_POOL -u $ADDR -p $MINER_PWD $CCMNN1 -i $OCIT;sleep 4;gnome-terminal -e "screen -r miner";sleep 1;screen -dmSL miner2 $HCD -a neoscrypt -o $FTC_POOL -u $ADDR -p $MINER_PWD $CCMNN2 -i $OCIT;sleep 4;gnome-terminal -e "screen -r miner2";sleep 1;screen -dmSL miner3 $HCD -a neoscrypt -o $FTC_POOL -u $ADDR -p $MINER_PWD $CCMNN3 -i $OCIT;sleep 4;gnome-terminal -e "screen -r miner3";fi;};Set_Power(){ GPUZ=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits|tail -1);if [ $POWERLIMIT == "YES" -a $INDIVIDUAL_POWERLIMIT == "NO" ];then i=0;if [ $POWERLIMIT_WATTS == "MAX" ];then while [ $i -lt $GPUZ ];do sudo nvidia-smi -i $i -pl ${GPUP[${i}]}>/dev/null;POWER_LIMIT[$i]=${GPUP[${i}]};let i=$i+1;sleep 1;done;else while [ $i -lt $GPUZ ];do sudo nvidia-smi -i $i -pl $POWERLIMIT_WATTS>/dev/null;let i=$i+1;sleep 1;done;fi;fi;if [ $INDIVIDUAL_POWERLIMIT == "YES" -a $POWERLIMIT == "NO" ];then GPUZ=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits|tail -1);while [ $i -lt $GPUZ ];do sudo nvidia-smi -i $i -pl ${INDIVIDUAL_POWERLIMIT_${i}}>/dev/null;POWER_LIMIT[$i]=${INDIVIDUAL_POWERLIMIT_${i}};let i=$i+1;sleep 1;done;fi;};Set_PowerB(){ GPUZ=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits|tail -1);while [ $i -lt $GPUZ ];do sudo nvidia-smi -i $i -pl ${GPUP[${i}]}>/dev/null;POWER_LIMIT[$i]=${GPUP[${i}]};let i=$i+1;sleep 1;done;};SLOW_USB_KEY_MODE="NO";GPUPowerMizerMode_Adjust="NO";GPUPowerMizerMode=1;SRR="NO";SRR_SERIAL="000055";__SRR_SLOT="1";EWBF_VERSION="3_4";EWBF_PERCENT=0;PCHECK(){ source /home/m1/1bash;LOG_FILE="/home/m1/Logs/8_wtmautoswitchlog";if [ -e "$LOG_FILE" ];then echo "$(cat $LOG_FILE|tail -n 2k)">$LOG_FILE;fi;while true;do python2.7 '/home/m1/WTM_SWITCHER' /home/m1/WTM.json|tee -a $LOG_FILE;sleep 5;CURRENT_COIN=$(head -n 200 /home/m1/1bash|grep COIN=|sed 's/COIN=//'|sed 's/\"//'|sed 's/\"//');TOP_COIN=$(cat /home/m1/Logs/WTM_top_coin|grep :|sed 's/:[0-9][0-9]//'|sed 's/[0-9]//');TIMEIN=$WTM_PROFIT_CHECK_INTERVAL;TIMEOUT=$(($TIMEIN * 60));echo "";echo "Check again in $TIMEOUT seconds";sleep $TIMEOUT;done;}

tel_TELEGRAM

logo(){
msg=$(cat <<EOF
${BR} ______  __    __    __
|  __  | \ \  / /   /  \  
| |__| |  \ \/ /   / /\ \ 
| _____|   \  /   /  \/  \ 
| |        /  \   |  __  | 
| |       / /\ \  | |  | | 
|_|      /_/  \_\ |_|  |_| ${N}

EOF
)
echo -e "$msg"
}
