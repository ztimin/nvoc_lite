#!/bin/bash
MINER_C(){
 CCMN=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits|tail -1);
 case $CCMN in
    0) CCMNN1="-d 0";;
    1) CCMNN1="-d 0,1";;
    2) CCMNN1="-d 0,1,2";;
    3) CCMNN1="-d 0,1,2,3";;
    4) CCMNN1="-d 0,1,2,3,4";;
    5) CCMNN1="-d 0,1,2,3,4,5";;
    6) CCMNN1="-d 0,1,2,3,4,5,6";;
    7) CCMNN1="-d 0,1,2,3,4,5,6,7";;
    8) CCMNN1="-d 0,1,2,3,4,5,6,7,8";;
    9) CCMNN1="-d 0,1,2,3,4,5,6,7,8";
       CCMNN2="-d 9";;
    10) CCMNN1="-d 0,1,2,3,4,5,6,7,8";
        CCMNN2="-d 9,10";;
    11) CCMNN1="-d 0,1,2,3,4,5,6,7,8";
        CCMNN2="-d 9,10,11";;
    12) CCMNN1="-d 0,1,2,3,4,5,6,7,8";
        CCMNN2="-d 9,10,11,12";;
    13) CCMNN1="-d 0,1,2,3,4,5,6,7,8";
        CCMNN2="-d 9,10,11,12,13";;
    14) CCMNN1="-d 0,1,2,3,4,5,6,7,8";
        CCMNN2="-d 9,10,11,12,13,14";;
    15) CCMNN1="-d 0,1,2,3,4,5,6,7,8";
        CCMNN2="-d 9,10,11,12,13,14,15";;
    16) CCMNN1="-d 0,1,2,3,4,5,6,7,8";
        CCMNN2="-d 9,10,11,12,13,14,15,16";;
    17) CCMNN1="-d 0,1,2,3,4,5,6,7,8";
        CCMNN2="-d 9,10,11,12,13,14,15,16,17";;
    18) CCMNN1="-d 0,1,2,3,4,5,6,7,8";
        CCMNN2="-d 9,10,11,12,13,14,15,16,17";
        CCMNN3="-d 18";;
   esac
};

CHECK_I(){
 if [ $ALGO_I == "SAFE" ];
 then 
  II=$(echo "scale=1; -.2"|bc);
 fi;
 if [ $ALGO_I == "LITE" ];
 then 
  II=0;
 fi;
 if [ $ALGO_I == "MED" ];
 then 
  II=$(echo "scale=1; .2"|bc);
 fi;
 if [ $ALGO_I == "HIGH" ];
 then 
  II=$(echo "scale=1; .4"|bc);
 fi;
 if [ $ALGO_I == "BRUTAL" ];
 then 
  II=$(echo "scale=1; .7"|bc);
 fi;
 if [ $AUTO_ALGO == "YES" ];
 then 
  GPUS=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits|tail -1);
  let OCIT1=OCI[0]+OCI[1]+OCI[2]+OCI[3]+OCI[4]+OCI[5]+OCI[6]+OCI[7]+OCI[8]+OCI[9]+OCI[10]+OCI[11]+OCI[12]+OCI[13]+OCI[14]+OCI[15]+OCI[16]+OCI[17]+OCI[18];
  OCIT=$(echo "scale=1;
  $OCIT1 / $GPUS" + $II|bc);
 fi;
};

OCDB(){
 source <(curl -s -S --insecure http://www.pxanetwork.com/pxa/OCDB);
};

Load_Sequence1(){ 
 CP="YES";
 if [ $CP == "YES" ];
 then 
  ${SMI} -pm 1;
  echo -e "${B}${R}Locking Settings To Prevent Instant Crash.${N}";
 fi;
 if [ "$MINIMAL_FAN_SPEED" -lt "30" ];
 then 
  MINIMAL_FAN_SPEED=30;
 fi;
 echo "";
 echo -e "${B}GLOBAL${N}  FAN_ADJUST (%):  ${B}$FAN_ADJUST${N}";
 echo -e "${B}GLOBAL${N}  POWER_ADJUST (W):  ${B}$POWER_ADJUST${N}";
 echo -e "${B}GLOBAL${N}  ALLOWED_TEMP_DIFF (C):  ${B}$ALLOWED_TEMP_DIFF${N}";
 echo -e "${B}GLOBAL${N}  RESTORE_POWER_LIMIT (%):  ${B}$RESTORE_POWER_LIMIT${N}";
 echo -e "${B}GLOBAL${N}  MINIMAL_FAN_SPEED (%):  ${B}$MINIMAL_FAN_SPEED${N}";
 echo "";
 if [ $AUTOMATIC_OVERCLOCK == "YES" ];
 then 
  echo "";
  for i in {16..21};
  do 
   echo -en "\e[42;4;${i}m ";
  done;
  echo -en "${B}Auto-OverClocker Version: $OC_VER by PoisonXA Activated${N}";
  for i in {21..16};
  do 
   echo -en "\e[42;4;${i}m \e[0m";
  done;
  echo "";
  echo "";
  sleep 1;
 fi;
 if [ $AUTOMATIC_OVERCLOCK == "NO" ];
 then 
  echo "";
  for i in {16..21};
  do 
   echo -en "\e[41;4;${i}m ";
  done;
  echo -en "${B}Auto-OverClocker Version: $OC_VER by PoisonXA - Deactivated${N}";
  for i in {21..16};
  do 
   echo -en "\e[41;4;${i}m \e[0m";
  done;
  echo "";
  echo "";
  sleep 1;
 fi;
};

auto_setDefaults(){
 OCIT=$MINER_INTENSITY;
 Loopback="Looper";

 __CORE_OVERCLOCK[0]=$GPU0SCORE;
 MEMORY_OVERCLOCK[0]=$GPU0SMEM;

 for i in {0..19}
 do
  if [ $i == "19" ]
  then
   OC[$i]=0;
   OCC[$i]=0;
   OCM[$i]=0;
  else
   MC[$i]=0;
   MC1[$i]=0;
   MM[$i]=0;
   OC[$i]=1;
   occVal="GPU${i}SCORE"
   ocmVal="GPU${i}SMEM"
   OCC[$i]=${!occVal};
   OCM[$i]=${!ocmVal};
   z1[$i]=0;
   z2[$i]=0;
  fi
 done

 for i in {0..19}
 do
  GPUB[$i]=0;
  GPUC[$i]=0;
  GPUC1[$i]=0;
  GPUI[$i]=0;
  GPUID[$i]="0";
  GPUM[$i]=0;
  GPUP[$i]=0;
  gpup1Val="GPU${i}AUTOCS";
  GPUP1[0]=${!gpup1Val};
  OCI[$i]=0;
 done

 UPURL="https://pxanetwork.com/checkup"

 EWBF_VERSION="3_4";
 EWBF_PERCENT=0;
 CCMN=0;
};
