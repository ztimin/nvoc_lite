#!/bin/bash
tel_TELEGRAM(){
# source ~/1bash
# source ~/Resources

 CHATID=$TELEGRAM_CHATID
 APIKEY=$TELEGRAM_APIKEY

 SYSTEM_BOOT_TIME=$(uptime -s)
 SYSTEM_UP_TIME=$(uptime -p)
 GPU_COUNT=$(nvidia-smi -i 0 --query-gpu=count --format=csv,noheader,nounits)
 let GPU_COUNT1=$GPU_COUNT+1
 REBOOT_REQUIRED=$([ -f /var/run/reboot-required ] && echo "Yes!!!" || echo "No")
 GPU_UTILIZATIONS=$(nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits | tr '\n' '   ')
 TEMP_FAN_POWER=$(tail  -n 50 /home/m1/Logs/6_autotemplog  | grep GPU | awk '{gsub(/:/,": ")}1' |tail -n $GPU_COUNT | sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g')
 WDOG_WARNINGS=$(tail  -n 50 /home/m1/Alerts/7_wdog_alertlog | grep WARNING | awk '{gsub(/:/,": ")}1' |tail -n $GPU_COUNT | sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'  | awk '{print $0}' )
 TEMP_WARNINGS=$(tail  -n 50 /home/m1/Alerts/6_temp_alertlog | grep WARNING | awk '{gsub(/:/,": ")}1' |tail -n $GPU_COUNT | sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'  | awk '{print $0}' )


 if [[ -n  $(ps ax | grep SCREEN | grep miner | awk '"miner" {print $1}') ]]
 then
  MINER_PID=$(ps ax | grep SCREEN | grep miner | awk '"miner" {print $1}')
  MINER_UP_TIME=$(ps -p $MINER_PID -o etime | grep -v ELAPSED)
 else
  MINER_UP_TIME=("Not Running")
 fi

 LF=$'\n'
 MSG=$(echo "Telegram Name: $TELEGRAM_NAME $LF $LF Worker: $WORKERNAME $LF Boot Time: $SYSTEM_BOOT_TIME $LF System Up Time: $SYSTEM_UP_TIME $LF Miner Uptime: $MINER_UP_TIME $LF Currently Mining: $CURRENT_COIN $LF BTC Price: $BTC_PRICE_VALUE $LF Reboot Required: $REBOOT_REQUIRED $LF GPU Count: $GPU_COUNT $LF GPU Utilization: $LF $GPU_UTILIZATIONS $LF Temp, Fan, Power: $LF $TEMP_FAN_POWER $LF $LF Auto Switch: $LF$AUTO_SWITCH $LF $LF Watchdog Alerts: $LF $WDOG_WARNINGS $LF $LF Temp Alerts: $LF $TEMP_WARNINGS $LF $LF CURRENT HASH: $LF $CURRENTHASH")
 /usr/bin/curl -m 5 -s -X POST --output /dev/null https://api.telegram.org/bot${APIKEY}/sendMessage -d "text=${MSG}" -d chat_id=${CHATID}
}

TELEGRAM_TYPE="papampi";
Make_LOGS(){ 
 TAIL_GPU_COUNT=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits|tail -1|awk '{ SUM += $1+3} ;{ print SUM }');
 echo -e "${B}${Y}Displaying the last known lines of the miner log -USE THIS TO TROUBLESHOOT-${N}";
 MINER_LOG=$(tail -n $TAIL_GPU_COUNT /home/m1/Logs/screenlog.0|sed -r 's/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'|awk '{print $0,""}');
 echo $MINER_LOG;
 echo "";
 LOG1_FILE="/home/m1/Logs/5_wdog_log";echo -e "${B}${Y}Displaying the last 20 lines of Restart Logs${N}";
 tail -20 $LOG1_FILE;
 echo "";
 echo -e "${B}${Y}Displaying the last 20 lines of WatchDog Alert Logs${N}";
 ALERT1_LOG_FILE="/home/m1/Alerts/7_wdog_alertlog";
 tail -20 $ALERT1_LOG_FILE;
 echo "";
 echo "";
 LOG_FILE="/home/m1/Logs/6_autotemplog";
 echo -e "${B}${Y}Displaying the last 20 lines of Temp Logs${N}";
 tail -20 $LOG_FILE;
 OC_FILE="/home/m1/Logs/6_autooclog";
 echo "";
 echo -e "${B}${Y}Displaying the last known Overclock Settings${N}";
 GPU_COUNT=$(nvidia-smi --query-gpu=count --format=csv,noheader,nounits|tail -1);
 OCSETTINGS=$(tail -n 50 /home/m1/Logs/6_autooclog|grep GPU|awk '{gsub(/:/,": ")}1'|tail -n $GPU_COUNT|sed -r ''|awk '{print $0,""}');
 echo $OCSETTINGS;
 echo "";
 echo -e "${B}${Y}Displaying the last 20 lines of Auto Temp Alert Logs${N}";
 ALERT_LOG_FILE="/home/m1/Alerts/6_temp_alertlog";
 tail -20 $ALERT_LOG_FILE;
};
